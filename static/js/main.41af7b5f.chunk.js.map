{"version":3,"sources":["components/Messages/Messages.module.css","components/Rooms/Rooms.module.css","components/Chat.module.css","config/events.ts","context/socket.context.tsx","config/default.ts","components/Messages/Messages.tsx","components/Rooms/Rooms.tsx","components/Chat.tsx","App.tsx","index.tsx"],"names":["module","exports","EVENTS","CREATE_ROOM","SEND_ROOM_MESSAGE","JOIN_ROOM","ROOMS","JOINED_ROOM","ROOM_MESSAGE","socket","io","SocketsContext","createContext","setUsername","roomsList","messages","setMessages","useSockets","useContext","SocketsProvider","props","useState","username","roomId","setRoomId","setRoomsList","useEffect","window","onfocus","document","title","on","value","message","time","hasFocus","Provider","MessagesContainer","tempMessage","setTempMessage","messageEndRef","useRef","current","scrollIntoView","behavior","className","styles","wrapper","messageList","map","index","ownMessage","messageInner","messageSender","messageBody","ref","messageBox","rows","placeholder","onChange","e","currentTarget","onClick","String","trim","emit","date","Date","getHours","getMinutes","RoomsContainer","roomName","setRoomName","toUpperCase","createRoomWrapper","roomList","Object","keys","key","disabled","name","handleJoinRoom","Chat","tempUsername","setTempUsername","localStorage","getItem","nameInputWrapper","nameInputInner","setItem","container","Rooms","Messages","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41af7b5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__IvVVp\",\"messageList\":\"Messages_messageList__3oGDx\",\"message\":\"Messages_message__ZlNvM\",\"ownMessage\":\"Messages_ownMessage__1ghIZ\",\"messageInner\":\"Messages_messageInner__2rg70\",\"messageSender\":\"Messages_messageSender__EJFwG\",\"messageBody\":\"Messages_messageBody__19LAF\",\"messageBox\":\"Messages_messageBox__VJ17g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Rooms_wrapper__1pBto\",\"createRoomWrapper\":\"Rooms_createRoomWrapper__2Go3F\",\"username\":\"Rooms_username__1gH1P\",\"roomList\":\"Rooms_roomList__2hXgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chat_container__DvSvw\",\"nameInputWrapper\":\"Chat_nameInputWrapper__3eRTi\",\"nameInputInner\":\"Chat_nameInputInner__1neZZ\"};","export const EVENTS = {\n    connection: 'connection',\n    CLIENT: {\n        CREATE_ROOM: 'CREATE_ROOM',\n        SEND_ROOM_MESSAGE: 'SEND_ROOM_MESSAGE',\n        JOIN_ROOM: 'JOIN_ROOM'\n    },\n    SERVER: {\n        ROOMS: 'ROOMS',\n        JOINED_ROOM: 'JOINED_ROOM',\n        ROOM_MESSAGE: 'ROOM_MESSAGE'\n    }\n};","/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types,no-unused-vars,@typescript-eslint/ban-types */\nimport React, {createContext, useContext, useEffect, useState} from 'react';\nimport io, {Socket} from 'socket.io-client';\nimport {SOCKET_URL} from '../config/default';\nimport {EVENTS} from '../config/events';\n\ninterface Context {\n    socket: Socket\n    username?: string | null\n    setUsername: (name: string) => void\n    messages?: Array<{ message: string, time: string, username: string }>\n    setMessages: Function\n    roomId?: string\n    roomsList: Record<string, { name: string }>\n}\n\nconst socket = io(SOCKET_URL);\n\nconst SocketsContext = createContext<Context>(\n    {socket, setUsername: () => false, roomsList: {}, messages: [], setMessages: () => false}\n);\n\nconst SocketsProvider = (props: any) => {\n    const [username, setUsername] = useState('');\n    const [roomId, setRoomId] = useState('');\n    const [roomsList, setRoomsList] = useState({});\n    const [messages, setMessages] = useState<any[]>([]);\n\n    useEffect(() => {\n        window.onfocus = () => {\n            document.title = 'Chat API';\n        };\n    }, []);\n\n    socket.on(EVENTS.SERVER.ROOMS, (value) => {\n        setRoomsList(value);\n    });\n\n    socket.on(EVENTS.SERVER.JOINED_ROOM, (value) => {\n        setRoomId(value);\n        setMessages([]);\n    });\n\n    socket.on(EVENTS.SERVER.ROOM_MESSAGE, ({message, username, time}) => {\n        if (!document.hasFocus()) {\n            document.title = 'New message...';\n        }\n\n        setMessages([\n            ...messages, {message, username, time}\n        ]);\n    });\n\n    return (\n        <SocketsContext.Provider value={{socket, username, setUsername, roomId, roomsList, messages, setMessages}}  {...props}/>\n    );\n};\n\nexport const useSockets = (): Context => useContext(SocketsContext);\n\nexport default SocketsProvider;\n","export const SOCKET_URL = 'https://glacial-castle-34924.herokuapp.com/';","import React, {ReactElement, useEffect, useRef, useState} from 'react';\nimport {useSockets} from '../../context/socket.context';\nimport {EVENTS} from '../../config/events';\nimport styles from './Messages.module.css';\n\nconst MessagesContainer = (): ReactElement => {\n\n    const {socket, messages, roomId, username, setMessages} = useSockets();\n    const [tempMessage, setTempMessage] = useState('');\n    const messageEndRef = useRef<null | HTMLDivElement>(null);\n\n    const handleSendMessage = () => {\n        if (!String(tempMessage).trim()) return;\n\n        const message = tempMessage;\n        socket.emit(EVENTS.CLIENT.SEND_ROOM_MESSAGE, {roomId, message, username});\n\n        const date = new Date();\n\n        if (messages) {\n            setMessages([\n                ...messages,\n                {\n                    username: 'You',\n                    message,\n                    time: `${date.getHours()}:${date.getMinutes()}`\n                }\n            ]);\n        }\n\n        setTempMessage('');\n    };\n\n    useEffect(() => {\n        messageEndRef.current?.scrollIntoView({behavior: 'smooth'});\n    }, [messages]);\n\n    if (!roomId) return <div/>;\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.messageList}>\n                {\n                    messages?.map(({message, username, time}, index) => {\n                        return (\n                            <div key={index} className={username === 'You' ? styles.ownMessage : styles.message}>\n                                <div className={styles.messageInner}>\n                                    <span className={styles.messageSender}>{username} - {time}</span>\n                                    <span className={styles.messageBody}>{message}</span>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n                <div ref={messageEndRef}/>\n            </div>\n            <div className={styles.messageBox}>\n                <textarea rows={1} placeholder='Tape your message' value={tempMessage} onChange={(e) => setTempMessage(e.currentTarget.value)}/>\n                <button onClick={handleSendMessage}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MessagesContainer;","import React, {useState} from 'react';\nimport {useSockets} from '../../context/socket.context';\nimport {EVENTS} from '../../config/events';\nimport styles from './Rooms.module.css';\n\nconst RoomsContainer: React.FC<PropsType> = ({username}) => {\n    const {socket, roomId, roomsList} = useSockets();\n    const [roomName, setRoomName] = useState('');\n\n    const handleCreateRoom = () => {\n        if (!String(roomName).trim()) return;\n        socket.emit(EVENTS.CLIENT.CREATE_ROOM, {roomName});\n        setRoomName('');\n    };\n\n    const handleJoinRoom = (key: string) => {\n        if (key === roomId) return;\n        socket.emit(EVENTS.CLIENT.JOIN_ROOM, key);\n    };\n\n    return (\n        <nav className={styles.wrapper}>\n            <h3 className={styles.username}>{username.toUpperCase()}</h3>\n            <div className={styles.createRoomWrapper}>\n                <div>\n                    <input className='inp' placeholder='Room name' value={roomName} onChange={(e) => {\n                        setRoomName(e.currentTarget.value);\n                    }}/>\n                    <button className='btn' onClick={handleCreateRoom}>create room</button>\n                </div>\n            </div>\n            <ul className={styles.roomList}>\n                {\n                    Object.keys(roomsList).map((key) => {\n                        return (\n                            <div key={key}>\n                                <button disabled={key === roomId} title={`Join ${roomsList[key].name}`} onClick={() => handleJoinRoom(key)}>\n                                    {roomsList[key].name} ➡\n                                </button>\n                            </div>\n                        );\n                    })\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default RoomsContainer;\n\ntype PropsType = {\n    username: string\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, {ReactElement, useEffect, useState} from 'react';\nimport {useSockets} from '../context/socket.context';\nimport MessagesContainer from './Messages/Messages';\nimport styles from './Chat.module.css';\nimport RoomsContainer from './Rooms/Rooms';\n\nconst Chat = (): ReactElement => {\n    const {username, setUsername} = useSockets();\n    const [tempUsername, setTempUsername] = useState('');\n\n    const handleSetUsername = () => {\n        if (!tempUsername) return;\n        setUsername(tempUsername);\n        localStorage.setItem('username', tempUsername);\n        setTempUsername('');\n    };\n\n    useEffect(() => {\n        setTempUsername(localStorage.getItem('username') || '');\n    }, []);\n\n    return (\n        <div>\n            {!username &&\n            <div className={styles.nameInputWrapper}>\n                <div className={styles.nameInputInner}>\n                    <input className='inp' placeholder='Username' value={tempUsername} onChange={(e) => {\n                        setTempUsername(e.currentTarget.value);\n                    }}/>\n                    <button className='btn' onClick={handleSetUsername}>start</button>\n                </div>\n            </div>\n            }\n\n            {username &&\n            <div className={styles.container}>\n                <RoomsContainer username={username}/>\n                <MessagesContainer/>\n            </div>\n            }\n        </div>\n    );\n};\n\nexport default Chat;","import React, {ReactElement} from 'react';\nimport SocketsProvider from './context/socket.context';\nimport Chat from './components/Chat';\nimport './global.css';\n\nfunction App(): ReactElement {\n    return (\n        <SocketsProvider>\n            <Chat/>\n        </SocketsProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}